#!/bin/bash
#@****************************************************************************
#@ Organization : Ecloud (www.ecloud.fr)
#@ Licence : GNU/GPL
#@
#@ Description :
#@   Build environnement for docker container
#@ Prerequisites :
#@ Arguments :
#@
#@****************************************************************************
#@ History :
#@  - Mathieu GOULIN - 2014/07/29 : Initialise script
#@****************************************************************************

# Static configuration
script=`basename "$0" .sh`
log_file=`dirname $0`/../logs/$script.log

# Usage function
function usage () {
    # TODO - Write the good stuff here...
    echo "$0 [-s] [-d value]"
}
# Help function
function help () {
    usage
    echo
    grep -e "^#@" $script.sh | sed "s/^#@//"
}

# Log function
write_log () {
    log_state=$1
    shift;
    log_txt=$*
    log_date=`date +'%Y/%m/%d %H:%M:%S'`
    case ${log_state} in
        BEG)    chrtra="[START]"      ;;
        CFG)    chrtra="[CONF ERR]"   ;;
        ERR)    chrtra="[ERROR]"      ;;
        END)    chrtra="[END]"        ;;
        INF)    chrtra="[INFO]"       ;;
        *)      chrtra="[ - ]"        ;;
    esac
    echo "$log_date $chrtra : ${log_txt}" | tee -a ${log_file} 2>&1
}

#**************************************************************************
#@ Steps : Load Configuration
#**************************************************************************
write_log BEG "Debut du script $script"
write_log INF "Chargement de la configuration"
. `dirname $0`/../conf/env.sh


fnc_start() {
    write_log INF "Starting docker $container_name"
    docker ps -a | grep -q $container_name
    RC=$?
    if [ "x$RC" != "x0" ]
    then
        write_log INF "Container never lautch ... creating new"
        docker run -d $container_link -p $container_ports --name $container_name -v $mount_dir/container-mount:$container_mount -t $tag_name
    else
        write_log INF "Container ever lautch ... reusing"
        docker start $container_name
    fi
    RC=$?
    write_log INF "Exit => $RC"
}

fnc_stop() {
    write_log INF "Stopping docker $container_name"
    docker stop $container_name
    RC=$?
    write_log INF "Exit => $RC"
}

fnc_cli() {
    write_log INF "Entring in docker $container_name"
    docker run -i $container_link -v $mount_dir/container-mount:$container_mount -t $tag_name /bin/bash
    RC=$?
    write_log INF "Exit => $RC"
}

fnc_logs() {
    write_log INF "logs for docker $container_name"
    docker logs $container_name
    RC=$?
    write_log INF "Exit => $RC"
}
#**************************************************************************
#@ Steps : Select action
#**************************************************************************
# Parameters management
while [ $# -gt 0 ]
do
    case $1 in
        start) 
            fnc_start
            ;;
        cli)
            fnc_cli
            ;;
        logs)
            fnc_logs
            ;;
        stop)
            fnc_stop
            ;;
        restart)
            fnc_stop
            sleep 2
            fnc_start
            ;;
        rm)
            docker rm $container_name
            ;;
        *) usage ; exit 1 ;;
    esac
    shift
done
